@page "/"
@using Mercy.LabSummarization.Web.Models
@inject HttpClient Http

<PageTitle>Home</PageTitle>

<h1>Patient List</h1>

@if (patientList.Count() == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>PatientId</th>
                <th>Name</th>
                <th>Birth Date</th>
                <th>Gender</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var patient in patientList)
            {
                <tr>
                    <td>@patient.PatientId</td>
                    <td>@patient.PatientName</td>
                    <td>@patient.BirthDate</td>
                    <td>@patient.Gender</td>
                </tr>
            }
        </tbody>
    </table>

}

@if (labOrderResults.Count() == 0)
{
    <p><em>Loading lab results...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Patient Id</th>
                <th>Description</th>
                <th>Visit Id</th>
                <th>Order Time</th>
                <th>Result Time</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var labResult in labOrderResults)
            {
                <tr>
                    <td>@labResult.PatientId</td>
                    <td>@labResult.Description</td>
                    <td>@labResult.PatientEncounterCsnId</td>
                    <td>@labResult.OrderTime</td>
                    <td>@labResult.ResultTime</td>
                </tr>
            }
        </tbody>
    </table>

}


@code {
    private Patient[] patientList = [];
    private LabOrderResults[] labOrderResults = [];

    protected override async Task OnInitializedAsync()
    {        
        try {
            patientList = await Http.GetFromJsonAsync<Patient[]>($"/api/patient");
            labOrderResults = await Http.GetFromJsonAsync<LabOrderResults[]>($"/api/labresult");
        }
        catch (Exception ex) {
            Console.WriteLine(ex.Message);
        }
    }
}
